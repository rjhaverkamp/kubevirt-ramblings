apiVersion: v1
kind: Namespace
metadata:
  name: networking
  labels:
    pod-security.kubernetes.io/enforce: privileged
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: frr-config-worker-2
  namespace: networking
data:
  frr.conf: |
    hostname spine-worker-2
    router bgp 65000
     bgp router-id 10.5.0.4
     bgp log-neighbor-changes
     bgp default l2vpn-evpn
     no bgp ebgp-requires-policy
     neighbor 10.5.0.3 remote-as 65000
     address-family ipv4 unicast
      network 10.13.0.0/24
      redistribute connected
     exit-address-family
     !
     address-family l2vpn evpn
      neighbor 10.5.0.3 activate
      advertise-all-vni
     exit-address-family
    exit
    !
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: ubuntu-spine-worker-2
  namespace: networking
  labels:
    app: ubuntu-spine-worker-2
spec:
  selector:
    matchLabels:
      app: ubuntu-spine-worker-2
  template:
    metadata:
      labels:
        app: ubuntu-spine-worker-2
    spec:
      nodeSelector:
        kubernetes.io/hostname: "talos-default-worker-2"
      volumes:
        - name: frr-config
          configMap:
            name: frr-config-worker-2
      containers:
        - name: ubuntu
          image: ubuntu
          volumeMounts:
            - name: frr-config
              mountPath: /root/frr.conf
              subPath: frr.conf
          command:
            - "/bin/bash"
            - "-c"
            - |
              apt-get update
              apt-get install -y iproute2 bridge-utils iputils-ping net-tools traceroute tcpdump curl wget dnsutils nftables iptables frr frr-pythontools
              echo "Network tools and FRR installed."

              # Enable FRR daemons
              sed -i 's/^bgpd=no/bgpd=yes/' /etc/frr/daemons
              sed -i 's/^ospfd=no/ospfd=yes/' /etc/frr/daemons
              sed -i 's/^zebra=no/zebra=yes/' /etc/frr/daemons

              # Set proper permissions for FRR config
              cp /root/frr.conf /etc/frr/frr.conf

              # Start FRR service
              echo "Starting FRR..."
              /usr/lib/frr/frrinit.sh start

              # Verify FRR is running
              sleep 5
              /usr/lib/frr/frrinit.sh status

              echo "FRR started successfully. Container will sleep now..."
              ip link add vxlan300 type vxlan id 300 local 10.5.0.4 dstport 4789 nolearning
              brctl addbr br300
              brctl addif br300 vxlan300
              brctl stp br300 off
              ip link set up dev br300
              ip link set up dev vxlan300
              sleep infinity
          imagePullPolicy: IfNotPresent
          securityContext:
            capabilities:
              add: ["NET_ADMIN", "SYS_ADMIN"]
            runAsUser: 0
      restartPolicy: Always
      hostIPC: true
      hostNetwork: true
      hostPID: true
